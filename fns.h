int yylex(void);
void error(Line *, char *, ...);
void yyerror(char *);
void* emalloc(ulong);
Symbol* getsym(char *);
ASTNode* node(int, ...);
void levelch(int);
Type* type(int, ...);
int typeor(int, int);
Type *bittype(int);
Type *dodecl(ASTNode *, Type *, int);
void checksym(Symbol *);
ASTNode *typecheck(ASTNode *);
void irgen(ASTNode *);
void newfunc(Type *);
Member *doparam(ASTNode *, Type *, Member *, int);
void lexinit(void);
ASTNode *astfold(ASTNode *);
#define warn error
BitSet *bsnew(int);
void bsreset(BitSet *);
int bsadd(BitSet *, int);
int bstest(BitSet *, int);
int bsiter(BitSet *, int);
void bscopy(BitSet *, BitSet *);
IR* newφ(Line *, int);
void addφ(IRBlock *, IR *);
void irtossa(void);
Targ* targ(int, ...);
void dvn(void);
int longop(Line *, int, long, long, long*);
void dead(void);
Member *dostruct(ASTNode *, Type *, Member *, int, int *);
